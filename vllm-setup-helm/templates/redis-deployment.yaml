# chart/templates/redis-deployment.yaml
{{- if .Values.lmcache.redis.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-redis-{{ .Values.lmcache.redis.nameSuffix }}
  namespace: {{ .Release.Namespace | default .Values.namespace }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis-lookup-server
spec:
  replicas: {{ .Values.lmcache.redis.replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.redisSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "chart.redisSelectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: lookup-server
          image: {{ include "chart.redisImage" . }}
          imagePullPolicy: {{ .Values.lmcache.redis.image.pullPolicy }}
          command:
            - redis-server
          ports:
            - name: redis-port
              containerPort: {{ .Values.lmcache.redis.service.targetPort }}
              protocol: TCP
          resources:
            limits:
              {{- with .Values.lmcache.redis.resources.limits }}
              {{- toYaml . | nindent 14 }}
              {{- end }}
            requests:
              {{- with .Values.lmcache.redis.resources.requests }}
              {{- toYaml . | nindent 14 }}
              {{- end }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
{{- end }}